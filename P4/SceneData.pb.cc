// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: SceneData.proto
// Protobuf C++ Version: 5.29.1

#include "SceneData.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr SceneRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sceneid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SceneRequest::SceneRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneRequestDefaultTypeInternal() {}
  union {
    SceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneRequestDefaultTypeInternal _SceneRequest_default_instance_;

inline constexpr MeshRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : file_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshRequest::MeshRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshRequestDefaultTypeInternal() {}
  union {
    MeshRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshRequestDefaultTypeInternal _MeshRequest_default_instance_;

inline constexpr MeshReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MeshReply::MeshReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MeshReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MeshReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MeshReplyDefaultTypeInternal() {}
  union {
    MeshReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MeshReplyDefaultTypeInternal _MeshReply_default_instance_;

inline constexpr Float3::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Float3::Float3(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Float3DefaultTypeInternal {
  PROTOBUF_CONSTEXPR Float3DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Float3DefaultTypeInternal() {}
  union {
    Float3 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Float3DefaultTypeInternal _Float3_default_instance_;

inline constexpr SceneReply::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : meshids_{},
        positions_{},
        sceneid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SceneReply::SceneReply(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SceneReplyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SceneReplyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SceneReplyDefaultTypeInternal() {}
  union {
    SceneReply _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SceneReplyDefaultTypeInternal _SceneReply_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_SceneData_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_SceneData_2eproto = nullptr;
const ::uint32_t
    TableStruct_SceneData_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Float3, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Float3, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::Float3, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::Float3, _impl_.z_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MeshRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MeshRequest, _impl_.file_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MeshReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MeshReply, _impl_.data_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SceneRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SceneRequest, _impl_.sceneid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::SceneReply, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::SceneReply, _impl_.sceneid_),
        PROTOBUF_FIELD_OFFSET(::SceneReply, _impl_.meshids_),
        PROTOBUF_FIELD_OFFSET(::SceneReply, _impl_.positions_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Float3)},
        {11, -1, -1, sizeof(::MeshRequest)},
        {20, -1, -1, sizeof(::MeshReply)},
        {29, -1, -1, sizeof(::SceneRequest)},
        {38, -1, -1, sizeof(::SceneReply)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_Float3_default_instance_._instance,
    &::_MeshRequest_default_instance_._instance,
    &::_MeshReply_default_instance_._instance,
    &::_SceneRequest_default_instance_._instance,
    &::_SceneReply_default_instance_._instance,
};
const char descriptor_table_protodef_SceneData_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017SceneData.proto\")\n\006Float3\022\t\n\001x\030\001 \001(\002\022\t"
    "\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\" \n\013MeshRequest\022\021\n\tf"
    "ile_name\030\001 \001(\t\"\031\n\tMeshReply\022\014\n\004data\030\001 \001("
    "\014\"\037\n\014SceneRequest\022\017\n\007sceneID\030\001 \001(\t\"J\n\nSc"
    "eneReply\022\017\n\007sceneID\030\001 \001(\t\022\017\n\007meshIDs\030\002 \003"
    "(\t\022\032\n\tpositions\030\003 \003(\0132\007.Float328\n\nMeshSt"
    "ream\022*\n\nStreamMesh\022\014.MeshRequest\032\n.MeshR"
    "eply\"\0000\00126\n\tSceneLoad\022)\n\tLoadScene\022\r.Sce"
    "neRequest\032\013.SceneReply\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_SceneData_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_SceneData_2eproto = {
    false,
    false,
    352,
    descriptor_table_protodef_SceneData_2eproto,
    "SceneData.proto",
    &descriptor_table_SceneData_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_SceneData_2eproto::offsets,
    file_level_enum_descriptors_SceneData_2eproto,
    file_level_service_descriptors_SceneData_2eproto,
};
// ===================================================================

class Float3::_Internal {
 public:
};

Float3::Float3(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Float3)
}
Float3::Float3(
    ::google::protobuf::Arena* arena, const Float3& from)
    : Float3(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Float3::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Float3::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Float3::~Float3() {
  // @@protoc_insertion_point(destructor:Float3)
  SharedDtor(*this);
}
inline void Float3::SharedDtor(MessageLite& self) {
  Float3& this_ = static_cast<Float3&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Float3::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Float3(arena);
}
constexpr auto Float3::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Float3),
                                            alignof(Float3));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Float3::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Float3_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Float3::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Float3>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Float3::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Float3>(), &Float3::ByteSizeLong,
            &Float3::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Float3, _impl_._cached_size_),
        false,
    },
    &Float3::kDescriptorMethods,
    &descriptor_table_SceneData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Float3::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Float3::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Float3>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Float3, _impl_.x_)}},
    // float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Float3, _impl_.y_)}},
    // float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Float3, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float x = 1;
    {PROTOBUF_FIELD_OFFSET(Float3, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 2;
    {PROTOBUF_FIELD_OFFSET(Float3, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 3;
    {PROTOBUF_FIELD_OFFSET(Float3, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Float3::Clear() {
// @@protoc_insertion_point(message_clear_start:Float3)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.z_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Float3::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Float3& this_ = static_cast<const Float3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Float3::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Float3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Float3)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // float x = 1;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // float y = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // float z = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Float3)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Float3::ByteSizeLong(const MessageLite& base) {
          const Float3& this_ = static_cast<const Float3&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Float3::ByteSizeLong() const {
          const Float3& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Float3)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // float x = 1;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Float3::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Float3*>(&to_msg);
  auto& from = static_cast<const Float3&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Float3)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Float3::CopyFrom(const Float3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Float3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Float3::InternalSwap(Float3* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Float3, _impl_.z_)
      + sizeof(Float3::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Float3, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Float3::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshRequest::_Internal {
 public:
};

MeshRequest::MeshRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MeshRequest)
}
inline PROTOBUF_NDEBUG_INLINE MeshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MeshRequest& from_msg)
      : file_name_(arena, from.file_name_),
        _cached_size_{0} {}

MeshRequest::MeshRequest(
    ::google::protobuf::Arena* arena,
    const MeshRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:MeshRequest)
}
inline PROTOBUF_NDEBUG_INLINE MeshRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : file_name_(arena),
        _cached_size_{0} {}

inline void MeshRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MeshRequest::~MeshRequest() {
  // @@protoc_insertion_point(destructor:MeshRequest)
  SharedDtor(*this);
}
inline void MeshRequest::SharedDtor(MessageLite& self) {
  MeshRequest& this_ = static_cast<MeshRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.file_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MeshRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MeshRequest(arena);
}
constexpr auto MeshRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MeshRequest),
                                            alignof(MeshRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MeshRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MeshRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MeshRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MeshRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MeshRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MeshRequest>(), &MeshRequest::ByteSizeLong,
            &MeshRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_._cached_size_),
        false,
    },
    &MeshRequest::kDescriptorMethods,
    &descriptor_table_SceneData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MeshRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 29, 2> MeshRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MeshRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string file_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_.file_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string file_name = 1;
    {PROTOBUF_FIELD_OFFSET(MeshRequest, _impl_.file_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\13\11\0\0\0\0\0\0"
    "MeshRequest"
    "file_name"
  }},
};

PROTOBUF_NOINLINE void MeshRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MeshRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.file_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MeshRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MeshRequest& this_ = static_cast<const MeshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MeshRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MeshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MeshRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string file_name = 1;
          if (!this_._internal_file_name().empty()) {
            const std::string& _s = this_._internal_file_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MeshRequest.file_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MeshRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MeshRequest::ByteSizeLong(const MessageLite& base) {
          const MeshRequest& this_ = static_cast<const MeshRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MeshRequest::ByteSizeLong() const {
          const MeshRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MeshRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string file_name = 1;
            if (!this_._internal_file_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MeshRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshRequest*>(&to_msg);
  auto& from = static_cast<const MeshRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MeshRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_file_name().empty()) {
    _this->_internal_set_file_name(from._internal_file_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshRequest::CopyFrom(const MeshRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MeshRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshRequest::InternalSwap(MeshRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_name_, &other->_impl_.file_name_, arena);
}

::google::protobuf::Metadata MeshRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MeshReply::_Internal {
 public:
};

MeshReply::MeshReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MeshReply)
}
inline PROTOBUF_NDEBUG_INLINE MeshReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MeshReply& from_msg)
      : data_(arena, from.data_),
        _cached_size_{0} {}

MeshReply::MeshReply(
    ::google::protobuf::Arena* arena,
    const MeshReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MeshReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:MeshReply)
}
inline PROTOBUF_NDEBUG_INLINE MeshReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : data_(arena),
        _cached_size_{0} {}

inline void MeshReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MeshReply::~MeshReply() {
  // @@protoc_insertion_point(destructor:MeshReply)
  SharedDtor(*this);
}
inline void MeshReply::SharedDtor(MessageLite& self) {
  MeshReply& this_ = static_cast<MeshReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.data_.Destroy();
  this_._impl_.~Impl_();
}

inline void* MeshReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MeshReply(arena);
}
constexpr auto MeshReply::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MeshReply),
                                            alignof(MeshReply));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MeshReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MeshReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MeshReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MeshReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MeshReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MeshReply>(), &MeshReply::ByteSizeLong,
            &MeshReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MeshReply, _impl_._cached_size_),
        false,
    },
    &MeshReply::kDescriptorMethods,
    &descriptor_table_SceneData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MeshReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MeshReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MeshReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes data = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MeshReply, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes data = 1;
    {PROTOBUF_FIELD_OFFSET(MeshReply, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MeshReply::Clear() {
// @@protoc_insertion_point(message_clear_start:MeshReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MeshReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MeshReply& this_ = static_cast<const MeshReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MeshReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MeshReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:MeshReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes data = 1;
          if (!this_._internal_data().empty()) {
            const std::string& _s = this_._internal_data();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:MeshReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MeshReply::ByteSizeLong(const MessageLite& base) {
          const MeshReply& this_ = static_cast<const MeshReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MeshReply::ByteSizeLong() const {
          const MeshReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:MeshReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes data = 1;
            if (!this_._internal_data().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_data());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MeshReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MeshReply*>(&to_msg);
  auto& from = static_cast<const MeshReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MeshReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MeshReply::CopyFrom(const MeshReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MeshReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MeshReply::InternalSwap(MeshReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, &other->_impl_.data_, arena);
}

::google::protobuf::Metadata MeshReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SceneRequest::_Internal {
 public:
};

SceneRequest::SceneRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SceneRequest)
}
inline PROTOBUF_NDEBUG_INLINE SceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SceneRequest& from_msg)
      : sceneid_(arena, from.sceneid_),
        _cached_size_{0} {}

SceneRequest::SceneRequest(
    ::google::protobuf::Arena* arena,
    const SceneRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SceneRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SceneRequest)
}
inline PROTOBUF_NDEBUG_INLINE SceneRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sceneid_(arena),
        _cached_size_{0} {}

inline void SceneRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SceneRequest::~SceneRequest() {
  // @@protoc_insertion_point(destructor:SceneRequest)
  SharedDtor(*this);
}
inline void SceneRequest::SharedDtor(MessageLite& self) {
  SceneRequest& this_ = static_cast<SceneRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sceneid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SceneRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SceneRequest(arena);
}
constexpr auto SceneRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SceneRequest),
                                            alignof(SceneRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SceneRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SceneRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SceneRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SceneRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SceneRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SceneRequest>(), &SceneRequest::ByteSizeLong,
            &SceneRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SceneRequest, _impl_._cached_size_),
        false,
    },
    &SceneRequest::kDescriptorMethods,
    &descriptor_table_SceneData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SceneRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 28, 2> SceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SceneRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string sceneID = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SceneRequest, _impl_.sceneid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sceneID = 1;
    {PROTOBUF_FIELD_OFFSET(SceneRequest, _impl_.sceneid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\14\7\0\0\0\0\0\0"
    "SceneRequest"
    "sceneID"
  }},
};

PROTOBUF_NOINLINE void SceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SceneRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sceneid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SceneRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SceneRequest& this_ = static_cast<const SceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SceneRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:SceneRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sceneID = 1;
          if (!this_._internal_sceneid().empty()) {
            const std::string& _s = this_._internal_sceneid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SceneRequest.sceneID");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:SceneRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SceneRequest::ByteSizeLong(const MessageLite& base) {
          const SceneRequest& this_ = static_cast<const SceneRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SceneRequest::ByteSizeLong() const {
          const SceneRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:SceneRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // string sceneID = 1;
            if (!this_._internal_sceneid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sceneid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SceneRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SceneRequest*>(&to_msg);
  auto& from = static_cast<const SceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_sceneid().empty()) {
    _this->_internal_set_sceneid(from._internal_sceneid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SceneRequest::CopyFrom(const SceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SceneRequest::InternalSwap(SceneRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sceneid_, &other->_impl_.sceneid_, arena);
}

::google::protobuf::Metadata SceneRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SceneReply::_Internal {
 public:
};

SceneReply::SceneReply(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SceneReply)
}
inline PROTOBUF_NDEBUG_INLINE SceneReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::SceneReply& from_msg)
      : meshids_{visibility, arena, from.meshids_},
        positions_{visibility, arena, from.positions_},
        sceneid_(arena, from.sceneid_),
        _cached_size_{0} {}

SceneReply::SceneReply(
    ::google::protobuf::Arena* arena,
    const SceneReply& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SceneReply* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:SceneReply)
}
inline PROTOBUF_NDEBUG_INLINE SceneReply::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : meshids_{visibility, arena},
        positions_{visibility, arena},
        sceneid_(arena),
        _cached_size_{0} {}

inline void SceneReply::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SceneReply::~SceneReply() {
  // @@protoc_insertion_point(destructor:SceneReply)
  SharedDtor(*this);
}
inline void SceneReply::SharedDtor(MessageLite& self) {
  SceneReply& this_ = static_cast<SceneReply&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.sceneid_.Destroy();
  this_._impl_.~Impl_();
}

inline void* SceneReply::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) SceneReply(arena);
}
constexpr auto SceneReply::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.meshids_) +
          decltype(SceneReply::_impl_.meshids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.positions_) +
          decltype(SceneReply::_impl_.positions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SceneReply), alignof(SceneReply), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SceneReply::PlacementNew_,
                                 sizeof(SceneReply),
                                 alignof(SceneReply));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull SceneReply::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_SceneReply_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &SceneReply::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<SceneReply>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &SceneReply::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<SceneReply>(), &SceneReply::ByteSizeLong,
            &SceneReply::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(SceneReply, _impl_._cached_size_),
        false,
    },
    &SceneReply::kDescriptorMethods,
    &descriptor_table_SceneData_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* SceneReply::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 33, 2> SceneReply::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::SceneReply>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string sceneID = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.sceneid_)}},
    // repeated string meshIDs = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.meshids_)}},
    // repeated .Float3 positions = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.positions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string sceneID = 1;
    {PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.sceneid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string meshIDs = 2;
    {PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.meshids_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .Float3 positions = 3;
    {PROTOBUF_FIELD_OFFSET(SceneReply, _impl_.positions_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Float3>()},
  }}, {{
    "\12\7\7\0\0\0\0\0"
    "SceneReply"
    "sceneID"
    "meshIDs"
  }},
};

PROTOBUF_NOINLINE void SceneReply::Clear() {
// @@protoc_insertion_point(message_clear_start:SceneReply)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.meshids_.Clear();
  _impl_.positions_.Clear();
  _impl_.sceneid_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SceneReply::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SceneReply& this_ = static_cast<const SceneReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SceneReply::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SceneReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:SceneReply)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string sceneID = 1;
          if (!this_._internal_sceneid().empty()) {
            const std::string& _s = this_._internal_sceneid();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SceneReply.sceneID");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // repeated string meshIDs = 2;
          for (int i = 0, n = this_._internal_meshids_size(); i < n; ++i) {
            const auto& s = this_._internal_meshids().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "SceneReply.meshIDs");
            target = stream->WriteString(2, s, target);
          }

          // repeated .Float3 positions = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_positions_size());
               i < n; i++) {
            const auto& repfield = this_._internal_positions().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:SceneReply)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SceneReply::ByteSizeLong(const MessageLite& base) {
          const SceneReply& this_ = static_cast<const SceneReply&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SceneReply::ByteSizeLong() const {
          const SceneReply& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:SceneReply)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string meshIDs = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_meshids().size());
              for (int i = 0, n = this_._internal_meshids().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_meshids().Get(i));
              }
            }
            // repeated .Float3 positions = 3;
            {
              total_size += 1UL * this_._internal_positions_size();
              for (const auto& msg : this_._internal_positions()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string sceneID = 1;
            if (!this_._internal_sceneid().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sceneid());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SceneReply::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SceneReply*>(&to_msg);
  auto& from = static_cast<const SceneReply&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SceneReply)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_meshids()->MergeFrom(from._internal_meshids());
  _this->_internal_mutable_positions()->MergeFrom(
      from._internal_positions());
  if (!from._internal_sceneid().empty()) {
    _this->_internal_set_sceneid(from._internal_sceneid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SceneReply::CopyFrom(const SceneReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SceneReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SceneReply::InternalSwap(SceneReply* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.meshids_.InternalSwap(&other->_impl_.meshids_);
  _impl_.positions_.InternalSwap(&other->_impl_.positions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sceneid_, &other->_impl_.sceneid_, arena);
}

::google::protobuf::Metadata SceneReply::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_SceneData_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
